Adam Karl
7/6/2020


The tour guide will always wait until at least 1 visitor is waiting outside, the enter just before that visitor, and leave after his last visitor (either his 10th visitor or when the visitor leaving means there's no more visitors inside).
The tour guide waits on the guideGO cv to enter the museum, and guideEXIT to leave.

A visitor will enter if and only if there's 1 or more "spots" available in the museum. Since each guide adds precisely 10 spots, no extra visitors can enter past the tenth (11 visitors, 1 guide will never finish)
The visitor waits on visitorGO to enter the museum, then leaves as soon as it finishes touring.

The code has some kind of bug that professor Khattab suspects is a memory error that occasionally causes some print lines (usually "Visitor X arriving") early in the program to not output properly, but the issue is not with deadlocks or improper control. If you happen to know what it is I'd love to know.
Attempting to fix this elusive bug resulted in me refactoring the code several times, using several shared variables to ensure the robustness of the code. The side effect of trying to fix the bug was that several redundancies are in place to prevent deadlocking (such as checking multiple times that conditions are ready for a guide to enter the museum)