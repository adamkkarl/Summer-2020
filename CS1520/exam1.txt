
Question
Each blank is 1 point.

In CSS, the algorithm that decides which rule “wins” in a conflict is called the __cascade__.
Using __responsive__ design ensures that users can view and interact with your page on any device. Small screens only see a __viewport__ into the whole page. In your CSS, you should avoid absolute units and prefer __relative__ units, since these will scale with the screen.
In functional programming, a __pure__ function does not change shared state, so it causes no __side effects__. Data which cannot be changed is __immutable__.
A __ip address__ is a small piece of data stored on the client's computer which acts as a sort of "ID card."
If you assign a variable the same value twice, the second assignment won’t have any effect. This is because assigning the same value is __idempotence__.
Most of the internet uses a pair of protocols: __IP__, which uniquely identifies computers and directs data to the right places; and __TCP__, which ensures successful in-order transfer of data. For high-speed non-critical data (like video), __UDP__ is a better choice.
Compiled languages produce machine code which is executed by the __CPU__, whereas interpreted languages produce machine code which is executed by a(n) __interpreter__. Of these two methods (compiled and interpreted), “scripting” languages are typically __interpreted__.

Question 2
Match the status code ranges on the left to their meaning on the right.
100-199 informational
200-299 successful
300-399 redirections
400-499 client errors
500-599 server errors

Question 3
When your browser wants a webpage, there is a short sequence of events. Describe what data is requested and given, and from whom (which computers). Write your answer like this (keep it short):
1. The domain's IP is requested from a DNS server.
2. its response is 93.184.216.34. (example.com)
3. /index.html is requested from 93.184.216.34. (using an HTTP GET request)
4. its response is /index.html.

Question 4
In stateful protocols, the server keeps track of active connections. Give two examples of problems with this connection model and explain how stateless protocols avoid each problem. Don't forget, some info is in the slide notes...
1. What happens if the connection goes down?
  - When the client gets no response, it doesn't matter whether the connection dropped before or after the initial request was received by the client.
  Either way, the client can just send the exact same request when the connection is reestablished.
2. What if someone connects and never disconnects?
  - Stateless protocols allow the server to just terminate connections at will. Most connections are normally short-lived anyway


Question 5
Java is statically typed, and JS is dynamically typed. Answer the following questions with a short sentence or sentence fragment each. Write your answer in a numbered list to match.
[1] when are the types checked in static typing? compile time
[1] when are the types checked in dynamic typing? runtime
[1] what are the types associated with in static typing? variables
[1] what are the types associated with in dynamic typing? values
[2] what advantage does static typing have over dynamic typing? you always know the type of a variable, regardless of what happens to it

Question 6
Here is some JS code. You can copy it and paste it into your browser's inspector console (on a blank tab is best!).

let A = { x: 10 };
let B = { y: 20 };
Object.setPrototypeOf(A, B); // A's prototype is now B
console.log(A.x); // 1
console.log(A.y); // 2
A.y = 30;         // 3
console.log(A.y); // 4
console.log(A.z); // 5

For each of the lines marked 1, 2, 3, 4, 5, say in one sentence what happens when you get or set the properties. Write your answers in a numbered list like this:
1. it looks inside A for x and finds a value of 10
2. it looks inside A for y and finds doesn't find it, so it looks in A's prototype of B and finds value 20
3. A doesn't have a y variable, so it creates a prototype for A and sets y to 30 in the prototype
4. it looks inside A for y and finds doesn't find it,so it looks inside A's prototypes and finds it defined twice, so it just says A.z is undefined
5. it looks inside A for z and finds doesn't find it, so it looks inside A's prototypes and doesn't find z there either so undefined

Question 7

You and your friends use a version control system (like git) for a team programming project. Answer each question with a short sentence in a numbered list. I'm not really looking for specific git commands that you would type in. I want more general answers than that.
[1] What is the code stored in? (not the name of a website) repository
[1] How do we move it around from computer to computer? using pushes and pulls
[1] How is this better than copying files directly? multiple people can work on a project simultaneously, then merge their work. Additionally, we can revert to old versions if we realize we messed something up
[2] If I create a bug, I can undo my changes, or "go back in time" to find where I introduced the bug. How is this possible? Like, what does git do that lets me do this? Git keeps a version history of each commit made.


Question 8
1. What’s wrong with this HTML snippet? (it parses fine, but there's a conceptual mistake.)
2. What should I probably be using instead?
<li id="important">One</li>
<li>Two</li>
<li id="important">Three</li>
1.
2. Should probably use ordered lists instead to automatically number each element

Question 9
I tried to make the text on my page get bigger when the browser is at least 1000 pixels wide, but this media query is doing the opposite. What should I change?
body { font-size: 110%; }
@media screen and (max-width: 1000px) {
  body { font-size: 200%; }
}

Question 10
Write a CSS selector for each description. (The selector is what comes before the { curly braces } in the CSS rule.)
1. all elements with class bigger:   *.bigger
2. <ul>s that are immediate children of a<nav>:  nav>ul
3. links (<a>) that are anywhere in <footer>:  footer a
4. all 6 kinds of headings (<h1>, etc.):   h1, h2, h3, h4, h5, h6
5. links, but only when the user puts their mouse over them:  a:hover

Question 11
Write a regular expression for each description of what it should match. (Don't include the / slashes around it.) Feel free to use regexr.com to come up with them.

2. either of the words "food" and "good".   \b(food|good)\b
3. words that end with "s", "es", or "ies". Not the whole word, just the ending part. \B(s|es|ies)\b
    -in "dogs having parties in boxes", it should find three matches.
    -it should not find these in the middle of words!
        -so it should find the ending on "dogs", but not the s in "base".
3. prices with a dollar sign and cents, like "$30.00" or "$12345.67". \$\d+\.\d{2}($|\s)
4. prices with a dollar sign, but the cents are optional, like "$30" and "$30.00" \$\d+(\.\d{2})?($|\s)
    -but not "$30." or "$30.0".
5. an entire line of 0 or more whitespace characters. \s*$

Question 12
What is the effect of this code? Say what it does in one short sentence in plain English. (Don't just say what each line does, think like you're explaining it to someone who doesn't know programming.)
let e = getElementsByTagName('li');
e.forEach((li) => {
  li.innerHTML += "!"
});
Put an exclamation mark after any item in a bulleted or numbered list


Question 13
Refer to this snippet of HTML:
<nav>
    <ul>
        <li><a href="home.html">Home</a></li>
        <li><a href="links.html">Links</a></li>
        <li><a href="guestbook.html">Guestbook</a></li>
    </ul>
</nav>
<h2>Welcome to my web page!!!</h2>
<p>Here's a ranking of my favorite fruits:</p>
<ol>
    <li><span id="secret">Pineapple</span></li>
    <li>Peaches</li>
    <li>Mangoes</li>
    <li>Bananas</li>
</ol>


Fill in this JS code to change the contents of the fourth item in the ordered list to "Apples":
document.______ (_____) ____.____ = "Apples";

Set up a listener for the mouseover event on the element with the ID “secret.” Have it change the color of the text of the thing being moused-over to red.

document._____ (_____).______ ("______",
function(event) {event._____.____.color = "red"; });

Question 14
Here is a small piece of JS that uses an object:

let c = new Cat("Noodle", 1);
c.meow();
c.haveBirthday();

Here is the output it should produce (on the console using console.log):

Noodle says 'meow!'
Noodle turned 2 today!

Write the constructor function for this object and the methods meow() and haveBirthday().

The object should have two properties, name and age.

meow() shows the message above using the name.

haveBirthday() should increment the object's age and print the message shown above with that new age.


Question 15
If I want to store some data on the client's PC, I can use two objects: "window.______ ", which lasts forever, and "window.________ " which lasts until the user closes the tab.


Question 16

From the list below, pick two things which might present difficulties to your users, and for each, give two or three examples of why that might be.

Remember, there are a lot of disabilities, but culture and technology can also be issues!

    -light gray boxes and text on a white background (which is exactly what I'm looking at while making this question, CANVAS)
    -a video tutorial on how to use your website
    -two text inputs for entering your full name
    -complex, fast-moving, colorful animations every time the user navigates to a new page
    -using <div> and only <div> to give structure to your HTML

Question 17
what kinda bear is best?
  cookiebear
